image: java:8-jdk

stages:
- validate
- build
- review
- deploy
- pages

before_script:
#  - echo `pwd` # debug
#  - echo "$CI_BUILD_NAME, $CI_BUILD_REF_NAME $CI_BUILD_STAGE" # debug
 - export GRADLE_USER_HOME=`pwd`/.gradle
 - rm -f  .gradle/caches/modules-2/modules-2.lock
 - rm -fr .gradle/caches/*/plugin-resolution/

# Cache downloaded dependencies and plugins between builds.
cache:
  paths:
  - .gradle/wrapper
  - .gradle/caches
  - target/

validate:
  stage: validate
  script:
    - ./gradlew check

build:
  stage: build
  script:
    - ./gradlew clean
    - ./gradlew spigot:build
  artifacts:
    expire_in: 1 week
    paths:
      - target/*.jar

javadoc:
  stage: build
  script:
    - ./gradlew aggregateJavadoc
  artifacts:
    expire_in: 1 week
    paths:
      - build/docs/javadoc/*
  only:
    - tags

pages:
  stage: pages
  script:
    - 'mkdir .public'
    - 'cp -r build/docs/javadoc/ public'
    - 'mv .public public'
  artifacts:
      paths:
      - public
  only:
    - tags

packages:
  stage: deploy
  script:
    - "echo PACKAGES_USER=$PACKAGES_USER >> gradle.properties"
    - "echo PACKAGES_PASSWORD=$PACKAGES_PASSWORD >> gradle.properties"
    - ./gradlew uploadArchives

dependency_scanning:
  image: docker:stable
  stage: review
  allow_failure: true
  before_script: []
  cache: {}
  dependencies: []
  tags:
    - docker
  services:
    - docker:stable-dind
  variables:
    DOCKER_DRIVER: overlay2
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env DEP_SCAN_DISABLE_REMOTE_CHECKS="${DEP_SCAN_DISABLE_REMOTE_CHECKS:-false}"
        --volume "$PWD:/code"
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/dependency-scanning:$SP_VERSION" /code
  artifacts:
    paths:
      - gl-dependency-scanning-report.json

codacy:
  stage: review
  script:
    - curl https://api.codacy.com/events/push/f22629ed146d4b719b97be48589f6ab3
  allow_failure: false

