image: maven:3.3.9-jdk-8

stages:
- validate
- build
- review
- pages
#- deploy

variables:
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

# Cache downloaded dependencies and plugins between builds.
cache:
  paths:
    - /root/.m2/repository/
    - .m2/repository/
    - target/

validate:
  stage: validate
  script:
    - 'mvn validate'

build:
  stage: build
  script:
    - 'mvn clean install'
  artifacts:
    expire_in: 1 week
    paths:
      - target/*.jar

javadoc:
  stage: build
  script:
    - 'mvn javadoc:javadoc'
  artifacts:
    expire_in: 1 week
    paths:
      - target/site/javadoc/*
  only:
    - master

sonar:
  stage: review
  script:
    - 'mvn $MAVEN_CLI_OPTS sonar:sonar'

pages:
  stage: pages
  script:
    - 'mkdir .public'
    - 'cp -r target/site/javadoc/ public'
    - 'mv .public public'
  artifacts:
      paths:
      - public
  only:
    - master

dependency_scan:
  stage: review
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env DEP_SCAN_DISABLE_REMOTE_CHECKS="${DEP_SCAN_DISABLE_REMOTE_CHECKS:-false}"
        --volume "$PWD:/code"
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/dependency-scanning:$SP_VERSION" /code
  artifacts:
    paths: [gl-dependency-scanning-report.json]
