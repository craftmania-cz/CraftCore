buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
        classpath 'com.netflix.nebula:gradle-aggregate-javadocs-plugin:2.2.+'
    }
}

apply plugin: 'java'
apply plugin: 'nebula-aggregate-javadocs'
apply plugin: 'signing'

clean { delete './target' }
clean { delete './build' }

group = 'cz.craftmania.craftcore'

description = """"""

sourceCompatibility = 16
targetCompatibility = 16

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task setupCIWorkspace {
    // do nothing, stub method
}

def mainVersion = "2.6.0-beta"
def branch = ""
def gitId = ""

// Name-master-76735d.jar
allprojects {
    version = mainVersion + branch + gitId
}

artifacts {
    archives file("./target/craftcore-" + version + ".jar")
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'signing'

    sourceCompatibility = 16
    targetCompatibility = 16

    compileJava {
        options.compilerArgs += ["-parameters"]
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        archiveName = "${parent.name}-${project.name}-${parent.version}-sources.jar"
        from sourceSets.main.allSource
        destinationDir = file '../target'
    }

    artifacts {
        archives sourcesJar
    }
    build.dependsOn(sourcesJar)
}

/*uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "${nexusUrl}/repository/release") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
            snapshotRepository(url: "${nexusUrl}/repository/snapshots") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
        }
    }
}*/
